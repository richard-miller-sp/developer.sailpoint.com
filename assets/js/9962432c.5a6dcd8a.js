"use strict";(self.webpackChunksailpoint_developer_portal=self.webpackChunksailpoint_developer_portal||[]).push([[87477],{27575:(e,t,i)=>{i.r(t),i.d(t,{assets:()=>y,contentTitle:()=>h,default:()=>g,frontMatter:()=>m,metadata:()=>u,toc:()=>f});var s=i(87462),o=(i(67294),i(3905)),a=i(26389),n=i(94891),c=i(75190),r=i(47507),l=i(24310),p=i(63303),d=(i(75035),i(85162));const m={id:"check-policy-violations",sidebar_label:"This endpoint simulates provisioning a set of access items, and then checks against a set of policies to determine if granting the access items would cause creation of new policy violations.",hide_title:!0,hide_table_of_contents:!0,api:{operationId:"checkPolicyViolations",tags:["Checked Policy Violations"],description:">This submits a set of access items to request and a set of policies to check after the access provisioning is simulated in order to determine if policy violations would be created by provisioning the access items. It receives a payload that includes:  \n\n>**An identity:** Used as the recipient for the access items on the simulation. \n\n>**A provisioning plan:** To specify the changes to be simulatedly provisioned in the provided identity  \n\n>**A list of policies:** to check after the simulation of provisioning plan was applied to the identity in order to determine if the access granted in the simulation causes new policy violations. \n\n>Optionally you can pass a list of attributes, as query params, to be included or excluded from the response, this setting is applicable only to top level attributes as defined in the schema ***urn:ietf:params:scim:schemas:sailpoint:1.0:CheckedPolicyViolation.***  \n\n>**Valid values**: \n**- policies**\n **- identity**\n **- plan**\n **- violations**\n **- leftBundles**\n **- rightBundles** \n",requestBody:{required:!0,content:{"application/json":{schema:{type:"object",properties:{identity:{description:"An identity for whom access is requested on the provisioning simulation",type:"string",example:{identity:"Ryan.Russell"}},plan:{description:"A provisioning plan detailing the access to request on the simulation",type:"object",properties:{value:{type:"object",properties:{accounts:{type:"array",items:{type:"object",properties:{op:{description:"The operation to perform on the provisioning.",type:"string",example:"Modify"},instance:{type:"string",example:"null",description:"A particular instance to provision this access to"},application:{type:"string",example:"Active_Directory",description:"The application that owns the access items in the request"},attributes:{type:"array",items:{type:"object",properties:{op:{description:"The operation to perform on the access item.",type:"string",example:"Add"},name:{description:"The type of access item to provision.",type:"string",example:"groupmbr"},value:{description:"The name of the access item to provision.",type:"string",example:"UnixAdministration"}}}}}}}}}}},type:{type:"string",example:"application/sailpoint.object.ProvisioningPlan+json"},policies:{description:"A list of policies to check for new policy violations on the access provisioned by the simulation.",type:"array",items:{type:"string"},example:["SOD Policy","Entitlement Policy","RandomPolicyNotExisting"]}}}}}},responses:{201:{description:"Returns a list of violations based on simulated requested access",content:{"application/json":{schema:{type:"object",properties:{identity:{description:"An identity for whom access was requested on the provisioning simulation",type:"string",example:{identity:"Ryan.Russell"}},meta:{type:"object",properties:{resourceType:{description:"",type:"string",example:"CheckedPolicyViolation"}}},violations:{type:"array",items:{properties:{entitlements:{description:"An array of the entitlements used in the provisioning simulation.",type:"array",items:{type:"string"},example:["a2a","a2b","benefits"]},policyName:{description:"The name of the policy that conflicted with the access items provisioned in the simulation causing policy violation.",type:"string",example:"SOD Policy"},policyType:{description:"The type of the policy that conflicted with the access items provisioned in the simulation causing policy violation(s).",type:"string",example:"SOD"},description:{description:"The description of the policy violation(s) caused by the access provisioned in the simulation.",type:"string",example:"Security design should not be combined with administrative permissions."},constraintName:{description:"The specific constraint in the policy that conflicted with the access items provisioned in the simulation.",type:"string",example:" IT SOD-117"},leftBundles:{description:"The left set of entitlements defined in the policy constraint in order to check against another set of entitlements for compliance.",type:"array",items:{type:"string"},example:["Security Architect - IT"]},rightBundles:{description:"The right set of entitlements defined in the policy constraint in order to check against another set of entitlements for compliance.",type:"array",items:{type:"string"},example:["Unix Administrator - IT"]}}}},schemas:{description:"The SCIM schema for Checked Policy Violations.",type:"array",items:{type:"string",example:"urn:ietf:params:scim:schemas:sailpoint:1.0:CheckedPolicyViolation"}},policies:{description:"The set of policies used to check for conflicting access in the provisioning simulation",type:"array",items:{type:"string"},example:["SOD Policy","Entitlement Policy","RandomPolicyNotExisting"]},plan:{description:"A provisioning plan detailing the access to request on the simulation",type:"object",properties:{value:{type:"object",properties:{accounts:{type:"array",items:{type:"object",properties:{op:{description:"The operation performed on the access in the provisioning simulation.",type:"string",example:"Modify"},instance:{type:"string",example:"null",description:"A particular instance to provision this access to"},application:{type:"string",example:"Active_Directory",description:"The application that owns the access provisioned in the simulation."},attributes:{type:"array",items:{type:"object",properties:{op:{description:"The operation performed on the access in the provisioning simulation.",type:"string",example:"Add"},name:{description:"The type of provisioned access.",type:"string",example:"groupmbr"},value:{description:"The name of the provisioned access items.",type:"string",example:"UnixAdministration"}}}}}}}}},type:{type:"string",example:"application/sailpoint.object.ProvisioningPlan+json"}}}}}}}}},parameters:[{in:"query",name:"attributes",schema:{type:"string"},description:"A list of attributes to indicate what top level attributes to include in the response"},{in:"query",name:"authnPassword",schema:{type:"string"},description:"Password for authentication"},{in:"query",name:"authnUsername",schema:{type:"string"},description:"Username for authentication"},{in:"query",name:"excludedAttributes",schema:{type:"string"},description:"A list of attributes to indicate what top level attributes to exclude from the response"},{in:"query",name:"lookupByName",schema:{type:"boolean"},description:"This is not required in this endpoint, the returned object is a new PolicyViolation and not one returned from the persistence layer. This is inherited from the BaseSCIMResource and is used to override the default id based lookup, and use a name based lookup instead, if for any reason the artifact id is not present.",example:!1}],method:"post",path:"/CheckedPolicyViolations",servers:[{url:"http://localhost:8080/identityiq/scim/v2",description:"IdentityIQ SCIM server basepath and path to API."}],security:[{basicAuth:[]}],securitySchemes:{basicAuth:{type:"http",scheme:"basic"}},jsonRequestBodyExample:{identity:{identity:"Ryan.Russell"},plan:{value:{accounts:[{op:"Modify",instance:"null",application:"Active_Directory",attributes:[{op:"Add",name:"groupmbr",value:"UnixAdministration"}]}]}},type:"application/sailpoint.object.ProvisioningPlan+json",policies:["SOD Policy","Entitlement Policy","RandomPolicyNotExisting"]},info:{description:"IdentityIQ REST Endpoint Interface Documentation for SCIM\n",version:"8.3",title:"IdentityIQ SCIM REST API"},postman:{name:"This endpoint simulates provisioning a set of access items, and then checks against a set of policies to determine if granting the access items would cause creation of new policy violations.",description:{content:">This submits a set of access items to request and a set of policies to check after the access provisioning is simulated in order to determine if policy violations would be created by provisioning the access items. It receives a payload that includes:  \n\n>**An identity:** Used as the recipient for the access items on the simulation. \n\n>**A provisioning plan:** To specify the changes to be simulatedly provisioned in the provided identity  \n\n>**A list of policies:** to check after the simulation of provisioning plan was applied to the identity in order to determine if the access granted in the simulation causes new policy violations. \n\n>Optionally you can pass a list of attributes, as query params, to be included or excluded from the response, this setting is applicable only to top level attributes as defined in the schema ***urn:ietf:params:scim:schemas:sailpoint:1.0:CheckedPolicyViolation.***  \n\n>**Valid values**: \n**- policies**\n **- identity**\n **- plan**\n **- violations**\n **- leftBundles**\n **- rightBundles** \n",type:"text/plain"},url:{path:["CheckedPolicyViolations"],host:["{{baseUrl}}"],query:[{disabled:!1,description:{content:"A list of attributes to indicate what top level attributes to include in the response",type:"text/plain"},key:"attributes",value:""},{disabled:!1,description:{content:"Password for authentication",type:"text/plain"},key:"authnPassword",value:""},{disabled:!1,description:{content:"Username for authentication",type:"text/plain"},key:"authnUsername",value:""},{disabled:!1,description:{content:"A list of attributes to indicate what top level attributes to exclude from the response",type:"text/plain"},key:"excludedAttributes",value:""},{disabled:!1,description:{content:"This is not required in this endpoint, the returned object is a new PolicyViolation and not one returned from the persistence layer. This is inherited from the BaseSCIMResource and is used to override the default id based lookup, and use a name based lookup instead, if for any reason the artifact id is not present.",type:"text/plain"},key:"lookupByName",value:""}],variable:[]},header:[{key:"Content-Type",value:"application/json"},{key:"Accept",value:"application/json"}],method:"POST",body:{mode:"raw",raw:'""',options:{raw:{language:"json"}}}}},sidebar_class_name:"post api-method",info_path:"iiq/api/identityiq-scim-rest-api",custom_edit_url:"https://github.com/sailpoint-oss/developer.sailpoint.com/issues/new?assignees=&labels=&template=bug-report.md&title=%5BBug%5D+Your+Bug+Report+Here Requesting changes to 'This endpoint simulates provisioning a set of access items, and then checks against a set of policies to determine if granting the access items would cause creation of new policy violations.' (check-policy-violations)"},h=void 0,u={unversionedId:"api/check-policy-violations",id:"api/check-policy-violations",title:"check-policy-violations",description:"This endpoint simulates provisioning a set of access items, and then checks against a set of policies to determine if granting the access items would cause creation of new policy violations.",source:"@site/products/iiq/api/check-policy-violations.api.mdx",sourceDirName:"api",slug:"/api/check-policy-violations",permalink:"/iiq/api/check-policy-violations",draft:!1,editUrl:"https://github.com/sailpoint-oss/developer.sailpoint.com/issues/new?assignees=&labels=&template=bug-report.md&title=%5BBug%5D+Your+Bug+Report+Here Requesting changes to 'This endpoint simulates provisioning a set of access items, and then checks against a set of policies to determine if granting the access items would cause creation of new policy violations.' (check-policy-violations)",tags:[],version:"current",frontMatter:{id:"check-policy-violations",sidebar_label:"This endpoint simulates provisioning a set of access items, and then checks against a set of policies to determine if granting the access items would cause creation of new policy violations.",hide_title:!0,hide_table_of_contents:!0,api:{operationId:"checkPolicyViolations",tags:["Checked Policy Violations"],description:">This submits a set of access items to request and a set of policies to check after the access provisioning is simulated in order to determine if policy violations would be created by provisioning the access items. It receives a payload that includes:  \n\n>**An identity:** Used as the recipient for the access items on the simulation. \n\n>**A provisioning plan:** To specify the changes to be simulatedly provisioned in the provided identity  \n\n>**A list of policies:** to check after the simulation of provisioning plan was applied to the identity in order to determine if the access granted in the simulation causes new policy violations. \n\n>Optionally you can pass a list of attributes, as query params, to be included or excluded from the response, this setting is applicable only to top level attributes as defined in the schema ***urn:ietf:params:scim:schemas:sailpoint:1.0:CheckedPolicyViolation.***  \n\n>**Valid values**: \n**- policies**\n **- identity**\n **- plan**\n **- violations**\n **- leftBundles**\n **- rightBundles** \n",requestBody:{required:!0,content:{"application/json":{schema:{type:"object",properties:{identity:{description:"An identity for whom access is requested on the provisioning simulation",type:"string",example:{identity:"Ryan.Russell"}},plan:{description:"A provisioning plan detailing the access to request on the simulation",type:"object",properties:{value:{type:"object",properties:{accounts:{type:"array",items:{type:"object",properties:{op:{description:"The operation to perform on the provisioning.",type:"string",example:"Modify"},instance:{type:"string",example:"null",description:"A particular instance to provision this access to"},application:{type:"string",example:"Active_Directory",description:"The application that owns the access items in the request"},attributes:{type:"array",items:{type:"object",properties:{op:{description:"The operation to perform on the access item.",type:"string",example:"Add"},name:{description:"The type of access item to provision.",type:"string",example:"groupmbr"},value:{description:"The name of the access item to provision.",type:"string",example:"UnixAdministration"}}}}}}}}}}},type:{type:"string",example:"application/sailpoint.object.ProvisioningPlan+json"},policies:{description:"A list of policies to check for new policy violations on the access provisioned by the simulation.",type:"array",items:{type:"string"},example:["SOD Policy","Entitlement Policy","RandomPolicyNotExisting"]}}}}}},responses:{201:{description:"Returns a list of violations based on simulated requested access",content:{"application/json":{schema:{type:"object",properties:{identity:{description:"An identity for whom access was requested on the provisioning simulation",type:"string",example:{identity:"Ryan.Russell"}},meta:{type:"object",properties:{resourceType:{description:"",type:"string",example:"CheckedPolicyViolation"}}},violations:{type:"array",items:{properties:{entitlements:{description:"An array of the entitlements used in the provisioning simulation.",type:"array",items:{type:"string"},example:["a2a","a2b","benefits"]},policyName:{description:"The name of the policy that conflicted with the access items provisioned in the simulation causing policy violation.",type:"string",example:"SOD Policy"},policyType:{description:"The type of the policy that conflicted with the access items provisioned in the simulation causing policy violation(s).",type:"string",example:"SOD"},description:{description:"The description of the policy violation(s) caused by the access provisioned in the simulation.",type:"string",example:"Security design should not be combined with administrative permissions."},constraintName:{description:"The specific constraint in the policy that conflicted with the access items provisioned in the simulation.",type:"string",example:" IT SOD-117"},leftBundles:{description:"The left set of entitlements defined in the policy constraint in order to check against another set of entitlements for compliance.",type:"array",items:{type:"string"},example:["Security Architect - IT"]},rightBundles:{description:"The right set of entitlements defined in the policy constraint in order to check against another set of entitlements for compliance.",type:"array",items:{type:"string"},example:["Unix Administrator - IT"]}}}},schemas:{description:"The SCIM schema for Checked Policy Violations.",type:"array",items:{type:"string",example:"urn:ietf:params:scim:schemas:sailpoint:1.0:CheckedPolicyViolation"}},policies:{description:"The set of policies used to check for conflicting access in the provisioning simulation",type:"array",items:{type:"string"},example:["SOD Policy","Entitlement Policy","RandomPolicyNotExisting"]},plan:{description:"A provisioning plan detailing the access to request on the simulation",type:"object",properties:{value:{type:"object",properties:{accounts:{type:"array",items:{type:"object",properties:{op:{description:"The operation performed on the access in the provisioning simulation.",type:"string",example:"Modify"},instance:{type:"string",example:"null",description:"A particular instance to provision this access to"},application:{type:"string",example:"Active_Directory",description:"The application that owns the access provisioned in the simulation."},attributes:{type:"array",items:{type:"object",properties:{op:{description:"The operation performed on the access in the provisioning simulation.",type:"string",example:"Add"},name:{description:"The type of provisioned access.",type:"string",example:"groupmbr"},value:{description:"The name of the provisioned access items.",type:"string",example:"UnixAdministration"}}}}}}}}},type:{type:"string",example:"application/sailpoint.object.ProvisioningPlan+json"}}}}}}}}},parameters:[{in:"query",name:"attributes",schema:{type:"string"},description:"A list of attributes to indicate what top level attributes to include in the response"},{in:"query",name:"authnPassword",schema:{type:"string"},description:"Password for authentication"},{in:"query",name:"authnUsername",schema:{type:"string"},description:"Username for authentication"},{in:"query",name:"excludedAttributes",schema:{type:"string"},description:"A list of attributes to indicate what top level attributes to exclude from the response"},{in:"query",name:"lookupByName",schema:{type:"boolean"},description:"This is not required in this endpoint, the returned object is a new PolicyViolation and not one returned from the persistence layer. This is inherited from the BaseSCIMResource and is used to override the default id based lookup, and use a name based lookup instead, if for any reason the artifact id is not present.",example:!1}],method:"post",path:"/CheckedPolicyViolations",servers:[{url:"http://localhost:8080/identityiq/scim/v2",description:"IdentityIQ SCIM server basepath and path to API."}],security:[{basicAuth:[]}],securitySchemes:{basicAuth:{type:"http",scheme:"basic"}},jsonRequestBodyExample:{identity:{identity:"Ryan.Russell"},plan:{value:{accounts:[{op:"Modify",instance:"null",application:"Active_Directory",attributes:[{op:"Add",name:"groupmbr",value:"UnixAdministration"}]}]}},type:"application/sailpoint.object.ProvisioningPlan+json",policies:["SOD Policy","Entitlement Policy","RandomPolicyNotExisting"]},info:{description:"IdentityIQ REST Endpoint Interface Documentation for SCIM\n",version:"8.3",title:"IdentityIQ SCIM REST API"},postman:{name:"This endpoint simulates provisioning a set of access items, and then checks against a set of policies to determine if granting the access items would cause creation of new policy violations.",description:{content:">This submits a set of access items to request and a set of policies to check after the access provisioning is simulated in order to determine if policy violations would be created by provisioning the access items. It receives a payload that includes:  \n\n>**An identity:** Used as the recipient for the access items on the simulation. \n\n>**A provisioning plan:** To specify the changes to be simulatedly provisioned in the provided identity  \n\n>**A list of policies:** to check after the simulation of provisioning plan was applied to the identity in order to determine if the access granted in the simulation causes new policy violations. \n\n>Optionally you can pass a list of attributes, as query params, to be included or excluded from the response, this setting is applicable only to top level attributes as defined in the schema ***urn:ietf:params:scim:schemas:sailpoint:1.0:CheckedPolicyViolation.***  \n\n>**Valid values**: \n**- policies**\n **- identity**\n **- plan**\n **- violations**\n **- leftBundles**\n **- rightBundles** \n",type:"text/plain"},url:{path:["CheckedPolicyViolations"],host:["{{baseUrl}}"],query:[{disabled:!1,description:{content:"A list of attributes to indicate what top level attributes to include in the response",type:"text/plain"},key:"attributes",value:""},{disabled:!1,description:{content:"Password for authentication",type:"text/plain"},key:"authnPassword",value:""},{disabled:!1,description:{content:"Username for authentication",type:"text/plain"},key:"authnUsername",value:""},{disabled:!1,description:{content:"A list of attributes to indicate what top level attributes to exclude from the response",type:"text/plain"},key:"excludedAttributes",value:""},{disabled:!1,description:{content:"This is not required in this endpoint, the returned object is a new PolicyViolation and not one returned from the persistence layer. This is inherited from the BaseSCIMResource and is used to override the default id based lookup, and use a name based lookup instead, if for any reason the artifact id is not present.",type:"text/plain"},key:"lookupByName",value:""}],variable:[]},header:[{key:"Content-Type",value:"application/json"},{key:"Accept",value:"application/json"}],method:"POST",body:{mode:"raw",raw:'""',options:{raw:{language:"json"}}}}},sidebar_class_name:"post api-method",info_path:"iiq/api/identityiq-scim-rest-api",custom_edit_url:"https://github.com/sailpoint-oss/developer.sailpoint.com/issues/new?assignees=&labels=&template=bug-report.md&title=%5BBug%5D+Your+Bug+Report+Here Requesting changes to 'This endpoint simulates provisioning a set of access items, and then checks against a set of policies to determine if granting the access items would cause creation of new policy violations.' (check-policy-violations)"},sidebar:"iiqOpenApiSidebar",previous:{title:"Checked Policy Violations",permalink:"/iiq/api/checked-policy-violations"},next:{title:"Entitlements",permalink:"/iiq/api/entitlements"}},y={},f=[{value:"This endpoint simulates provisioning a set of access items, and then checks against a set of policies to determine if granting the access items would cause creation of new policy violations.",id:"this-endpoint-simulates-provisioning-a-set-of-access-items-and-then-checks-against-a-set-of-policies-to-determine-if-granting-the-access-items-would-cause-creation-of-new-policy-violations",level:2}],v={toc:f};function g(e){let{components:t,...i}=e;return(0,o.kt)("wrapper",(0,s.Z)({},v,i,{components:t,mdxType:"MDXLayout"}),(0,o.kt)("h2",{id:"this-endpoint-simulates-provisioning-a-set-of-access-items-and-then-checks-against-a-set-of-policies-to-determine-if-granting-the-access-items-would-cause-creation-of-new-policy-violations"},"This endpoint simulates provisioning a set of access items, and then checks against a set of policies to determine if granting the access items would cause creation of new policy violations."),(0,o.kt)("p",null,">","This submits a set of access items to request and a set of policies to check after the access provisioning is simulated in order to determine if policy violations would be created by provisioning the access items. It receives a payload that includes:  "),(0,o.kt)("blockquote",null,(0,o.kt)("p",{parentName:"blockquote"},(0,o.kt)("strong",{parentName:"p"},"An identity:")," Used as the recipient for the access items on the simulation. ")),(0,o.kt)("blockquote",null,(0,o.kt)("p",{parentName:"blockquote"},(0,o.kt)("strong",{parentName:"p"},"A provisioning plan:")," To specify the changes to be simulatedly provisioned in the provided identity  ")),(0,o.kt)("blockquote",null,(0,o.kt)("p",{parentName:"blockquote"},(0,o.kt)("strong",{parentName:"p"},"A list of policies:")," to check after the simulation of provisioning plan was applied to the identity in order to determine if the access granted in the simulation causes new policy violations. ")),(0,o.kt)("blockquote",null,(0,o.kt)("p",{parentName:"blockquote"},"Optionally you can pass a list of attributes, as query params, to be included or excluded from the response, this setting is applicable only to top level attributes as defined in the schema ",(0,o.kt)("strong",{parentName:"p"},(0,o.kt)("em",{parentName:"strong"},"urn:ietf:params:scim:schemas:sailpoint:1.0:CheckedPolicyViolation.")),"  ")),(0,o.kt)("blockquote",null,(0,o.kt)("p",{parentName:"blockquote"},(0,o.kt)("strong",{parentName:"p"},"Valid values"),":\n",(0,o.kt)("strong",{parentName:"p"},"- policies"),"\n",(0,o.kt)("strong",{parentName:"p"},"- identity"),"\n",(0,o.kt)("strong",{parentName:"p"},"- plan"),"\n",(0,o.kt)("strong",{parentName:"p"},"- violations"),"\n",(0,o.kt)("strong",{parentName:"p"},"- leftBundles"),"\n",(0,o.kt)("strong",{parentName:"p"},"- rightBundles")," ")),(0,o.kt)("details",{style:{marginBottom:"1rem"},"data-collapsed":!1,open:!0},(0,o.kt)("summary",{style:{}},(0,o.kt)("strong",null,"Query Parameters")),(0,o.kt)("div",null,(0,o.kt)("ul",null,(0,o.kt)(c.Z,{className:"paramsItem",param:{in:"query",name:"attributes",schema:{type:"string"},description:"A list of attributes to indicate what top level attributes to include in the response"},mdxType:"ParamsItem"}),(0,o.kt)(c.Z,{className:"paramsItem",param:{in:"query",name:"authnPassword",schema:{type:"string"},description:"Password for authentication"},mdxType:"ParamsItem"}),(0,o.kt)(c.Z,{className:"paramsItem",param:{in:"query",name:"authnUsername",schema:{type:"string"},description:"Username for authentication"},mdxType:"ParamsItem"}),(0,o.kt)(c.Z,{className:"paramsItem",param:{in:"query",name:"excludedAttributes",schema:{type:"string"},description:"A list of attributes to indicate what top level attributes to exclude from the response"},mdxType:"ParamsItem"}),(0,o.kt)(c.Z,{className:"paramsItem",param:{in:"query",name:"lookupByName",schema:{type:"boolean"},description:"This is not required in this endpoint, the returned object is a new PolicyViolation and not one returned from the persistence layer. This is inherited from the BaseSCIMResource and is used to override the default id based lookup, and use a name based lookup instead, if for any reason the artifact id is not present.",example:!1},mdxType:"ParamsItem"})))),(0,o.kt)(n.Z,{mdxType:"MimeTabs"},(0,o.kt)(d.Z,{label:"application/json",value:"application/json-schema",mdxType:"TabItem"},(0,o.kt)("details",{style:{},"data-collapsed":!1,open:!0},(0,o.kt)("summary",{style:{textAlign:"left"}},(0,o.kt)("strong",null,"Request Body"),(0,o.kt)("strong",{style:{fontSize:"var(--ifm-code-font-size)",color:"var(--openapi-required)"}}," required")),(0,o.kt)("div",{style:{textAlign:"left",marginLeft:"1rem"}}),(0,o.kt)("ul",{style:{marginLeft:"1rem"}},(0,o.kt)(l.Z,{collapsible:!1,name:"identity",required:!1,deprecated:void 0,schemaDescription:"An identity for whom access is requested on the provisioning simulation",schemaName:"string",qualifierMessage:void 0,defaultValue:void 0,mdxType:"SchemaItem"}),(0,o.kt)(l.Z,{collapsible:!0,className:"schemaItem",mdxType:"SchemaItem"},(0,o.kt)("details",{style:{}},(0,o.kt)("summary",{style:{}},(0,o.kt)("strong",null,"plan"),(0,o.kt)("span",{style:{opacity:"0.6"}}," object")),(0,o.kt)("div",{style:{marginLeft:"1rem"}},(0,o.kt)("div",{style:{marginTop:".5rem",marginBottom:".5rem"}},(0,o.kt)("p",null,"A provisioning plan detailing the access to request on the simulation")),(0,o.kt)(l.Z,{collapsible:!0,className:"schemaItem",mdxType:"SchemaItem"},(0,o.kt)("details",{style:{}},(0,o.kt)("summary",{style:{}},(0,o.kt)("strong",null,"value"),(0,o.kt)("span",{style:{opacity:"0.6"}}," object")),(0,o.kt)("div",{style:{marginLeft:"1rem"}},(0,o.kt)(l.Z,{collapsible:!0,className:"schemaItem",mdxType:"SchemaItem"},(0,o.kt)("details",{style:{}},(0,o.kt)("summary",{style:{}},(0,o.kt)("strong",null,"accounts"),(0,o.kt)("span",{style:{opacity:"0.6"}}," object[]")),(0,o.kt)("div",{style:{marginLeft:"1rem"}},(0,o.kt)(l.Z,{collapsible:!1,name:"op",required:!1,deprecated:void 0,schemaDescription:"The operation to perform on the provisioning.",schemaName:"string",qualifierMessage:void 0,defaultValue:void 0,mdxType:"SchemaItem"}),(0,o.kt)(l.Z,{collapsible:!1,name:"instance",required:!1,deprecated:void 0,schemaDescription:"A particular instance to provision this access to",schemaName:"string",qualifierMessage:void 0,defaultValue:void 0,mdxType:"SchemaItem"}),(0,o.kt)(l.Z,{collapsible:!1,name:"application",required:!1,deprecated:void 0,schemaDescription:"The application that owns the access items in the request",schemaName:"string",qualifierMessage:void 0,defaultValue:void 0,mdxType:"SchemaItem"}),(0,o.kt)(l.Z,{collapsible:!0,className:"schemaItem",mdxType:"SchemaItem"},(0,o.kt)("details",{style:{}},(0,o.kt)("summary",{style:{}},(0,o.kt)("strong",null,"attributes"),(0,o.kt)("span",{style:{opacity:"0.6"}}," object[]")),(0,o.kt)("div",{style:{marginLeft:"1rem"}},(0,o.kt)(l.Z,{collapsible:!1,name:"op",required:!1,deprecated:void 0,schemaDescription:"The operation to perform on the access item.",schemaName:"string",qualifierMessage:void 0,defaultValue:void 0,mdxType:"SchemaItem"}),(0,o.kt)(l.Z,{collapsible:!1,name:"name",required:!1,deprecated:void 0,schemaDescription:"The type of access item to provision.",schemaName:"string",qualifierMessage:void 0,defaultValue:void 0,mdxType:"SchemaItem"}),(0,o.kt)(l.Z,{collapsible:!1,name:"value",required:!1,deprecated:void 0,schemaDescription:"The name of the access item to provision.",schemaName:"string",qualifierMessage:void 0,defaultValue:void 0,mdxType:"SchemaItem"}))))))))))))),(0,o.kt)(l.Z,{collapsible:!1,name:"type",required:!1,deprecated:void 0,schemaDescription:void 0,schemaName:"string",qualifierMessage:void 0,defaultValue:void 0,mdxType:"SchemaItem"}),(0,o.kt)(l.Z,{collapsible:!1,name:"policies",required:!1,deprecated:void 0,schemaDescription:"A list of policies to check for new policy violations on the access provisioned by the simulation.",schemaName:"string[]",qualifierMessage:void 0,defaultValue:void 0,mdxType:"SchemaItem"}))))),(0,o.kt)("div",null,(0,o.kt)(a.Z,{mdxType:"ApiTabs"},(0,o.kt)(d.Z,{label:"201",value:"201",mdxType:"TabItem"},(0,o.kt)("div",null,(0,o.kt)("p",null,"Returns a list of violations based on simulated requested access")),(0,o.kt)("div",null,(0,o.kt)(n.Z,{schemaType:"response",mdxType:"MimeTabs"},(0,o.kt)(d.Z,{label:"application/json",value:"application/json",mdxType:"TabItem"},(0,o.kt)(p.Z,{mdxType:"SchemaTabs"},(0,o.kt)(d.Z,{label:"Schema",value:"Schema",mdxType:"TabItem"},(0,o.kt)("details",{style:{},"data-collapsed":!1,open:!0},(0,o.kt)("summary",{style:{textAlign:"left"}},(0,o.kt)("strong",null,"Schema")),(0,o.kt)("div",{style:{textAlign:"left",marginLeft:"1rem"}}),(0,o.kt)("ul",{style:{marginLeft:"1rem"}},(0,o.kt)(l.Z,{collapsible:!1,name:"identity",required:!1,deprecated:void 0,schemaDescription:"An identity for whom access was requested on the provisioning simulation",schemaName:"string",qualifierMessage:void 0,defaultValue:void 0,mdxType:"SchemaItem"}),(0,o.kt)(l.Z,{collapsible:!0,className:"schemaItem",mdxType:"SchemaItem"},(0,o.kt)("details",{style:{}},(0,o.kt)("summary",{style:{}},(0,o.kt)("strong",null,"meta"),(0,o.kt)("span",{style:{opacity:"0.6"}}," object")),(0,o.kt)("div",{style:{marginLeft:"1rem"}},(0,o.kt)(l.Z,{collapsible:!1,name:"resourceType",required:!1,deprecated:void 0,schemaDescription:"",schemaName:"string",qualifierMessage:void 0,defaultValue:void 0,mdxType:"SchemaItem"})))),(0,o.kt)(l.Z,{collapsible:!0,className:"schemaItem",mdxType:"SchemaItem"},(0,o.kt)("details",{style:{}},(0,o.kt)("summary",{style:{}},(0,o.kt)("strong",null,"violations"),(0,o.kt)("span",{style:{opacity:"0.6"}}," undefined[]")),(0,o.kt)("div",{style:{marginLeft:"1rem"}},(0,o.kt)(l.Z,{collapsible:!1,name:"entitlements",required:!1,deprecated:void 0,schemaDescription:"An array of the entitlements used in the provisioning simulation.",schemaName:"string[]",qualifierMessage:void 0,defaultValue:void 0,mdxType:"SchemaItem"}),(0,o.kt)(l.Z,{collapsible:!1,name:"policyName",required:!1,deprecated:void 0,schemaDescription:"The name of the policy that conflicted with the access items provisioned in the simulation causing policy violation.",schemaName:"string",qualifierMessage:void 0,defaultValue:void 0,mdxType:"SchemaItem"}),(0,o.kt)(l.Z,{collapsible:!1,name:"policyType",required:!1,deprecated:void 0,schemaDescription:"The type of the policy that conflicted with the access items provisioned in the simulation causing policy violation(s).",schemaName:"string",qualifierMessage:void 0,defaultValue:void 0,mdxType:"SchemaItem"}),(0,o.kt)(l.Z,{collapsible:!1,name:"description",required:!1,deprecated:void 0,schemaDescription:"The description of the policy violation(s) caused by the access provisioned in the simulation.",schemaName:"string",qualifierMessage:void 0,defaultValue:void 0,mdxType:"SchemaItem"}),(0,o.kt)(l.Z,{collapsible:!1,name:"constraintName",required:!1,deprecated:void 0,schemaDescription:"The specific constraint in the policy that conflicted with the access items provisioned in the simulation.",schemaName:"string",qualifierMessage:void 0,defaultValue:void 0,mdxType:"SchemaItem"}),(0,o.kt)(l.Z,{collapsible:!1,name:"leftBundles",required:!1,deprecated:void 0,schemaDescription:"The left set of entitlements defined in the policy constraint in order to check against another set of entitlements for compliance.",schemaName:"string[]",qualifierMessage:void 0,defaultValue:void 0,mdxType:"SchemaItem"}),(0,o.kt)(l.Z,{collapsible:!1,name:"rightBundles",required:!1,deprecated:void 0,schemaDescription:"The right set of entitlements defined in the policy constraint in order to check against another set of entitlements for compliance.",schemaName:"string[]",qualifierMessage:void 0,defaultValue:void 0,mdxType:"SchemaItem"})))),(0,o.kt)(l.Z,{collapsible:!1,name:"schemas",required:!1,deprecated:void 0,schemaDescription:"The SCIM schema for Checked Policy Violations.",schemaName:"string[]",qualifierMessage:void 0,defaultValue:void 0,mdxType:"SchemaItem"}),(0,o.kt)(l.Z,{collapsible:!1,name:"policies",required:!1,deprecated:void 0,schemaDescription:"The set of policies used to check for conflicting access in the provisioning simulation",schemaName:"string[]",qualifierMessage:void 0,defaultValue:void 0,mdxType:"SchemaItem"}),(0,o.kt)(l.Z,{collapsible:!0,className:"schemaItem",mdxType:"SchemaItem"},(0,o.kt)("details",{style:{}},(0,o.kt)("summary",{style:{}},(0,o.kt)("strong",null,"plan"),(0,o.kt)("span",{style:{opacity:"0.6"}}," object")),(0,o.kt)("div",{style:{marginLeft:"1rem"}},(0,o.kt)("div",{style:{marginTop:".5rem",marginBottom:".5rem"}},(0,o.kt)("p",null,"A provisioning plan detailing the access to request on the simulation")),(0,o.kt)(l.Z,{collapsible:!0,className:"schemaItem",mdxType:"SchemaItem"},(0,o.kt)("details",{style:{}},(0,o.kt)("summary",{style:{}},(0,o.kt)("strong",null,"value"),(0,o.kt)("span",{style:{opacity:"0.6"}}," object")),(0,o.kt)("div",{style:{marginLeft:"1rem"}},(0,o.kt)(l.Z,{collapsible:!0,className:"schemaItem",mdxType:"SchemaItem"},(0,o.kt)("details",{style:{}},(0,o.kt)("summary",{style:{}},(0,o.kt)("strong",null,"accounts"),(0,o.kt)("span",{style:{opacity:"0.6"}}," object[]")),(0,o.kt)("div",{style:{marginLeft:"1rem"}},(0,o.kt)(l.Z,{collapsible:!1,name:"op",required:!1,deprecated:void 0,schemaDescription:"The operation performed on the access in the provisioning simulation.",schemaName:"string",qualifierMessage:void 0,defaultValue:void 0,mdxType:"SchemaItem"}),(0,o.kt)(l.Z,{collapsible:!1,name:"instance",required:!1,deprecated:void 0,schemaDescription:"A particular instance to provision this access to",schemaName:"string",qualifierMessage:void 0,defaultValue:void 0,mdxType:"SchemaItem"}),(0,o.kt)(l.Z,{collapsible:!1,name:"application",required:!1,deprecated:void 0,schemaDescription:"The application that owns the access provisioned in the simulation.",schemaName:"string",qualifierMessage:void 0,defaultValue:void 0,mdxType:"SchemaItem"}),(0,o.kt)(l.Z,{collapsible:!0,className:"schemaItem",mdxType:"SchemaItem"},(0,o.kt)("details",{style:{}},(0,o.kt)("summary",{style:{}},(0,o.kt)("strong",null,"attributes"),(0,o.kt)("span",{style:{opacity:"0.6"}}," object[]")),(0,o.kt)("div",{style:{marginLeft:"1rem"}},(0,o.kt)(l.Z,{collapsible:!1,name:"op",required:!1,deprecated:void 0,schemaDescription:"The operation performed on the access in the provisioning simulation.",schemaName:"string",qualifierMessage:void 0,defaultValue:void 0,mdxType:"SchemaItem"}),(0,o.kt)(l.Z,{collapsible:!1,name:"name",required:!1,deprecated:void 0,schemaDescription:"The type of provisioned access.",schemaName:"string",qualifierMessage:void 0,defaultValue:void 0,mdxType:"SchemaItem"}),(0,o.kt)(l.Z,{collapsible:!1,name:"value",required:!1,deprecated:void 0,schemaDescription:"The name of the provisioned access items.",schemaName:"string",qualifierMessage:void 0,defaultValue:void 0,mdxType:"SchemaItem"})))))))))),(0,o.kt)(l.Z,{collapsible:!1,name:"type",required:!1,deprecated:void 0,schemaDescription:void 0,schemaName:"string",qualifierMessage:void 0,defaultValue:void 0,mdxType:"SchemaItem"}))))))),(0,o.kt)(d.Z,{label:"Example (from schema)",value:"Example (from schema)",mdxType:"TabItem"},(0,o.kt)(r.Z,{responseExample:'{\n  "identity": {\n    "identity": "Ryan.Russell"\n  },\n  "meta": {\n    "resourceType": "CheckedPolicyViolation"\n  },\n  "violations": [\n    {\n      "entitlements": [\n        "a2a",\n        "a2b",\n        "benefits"\n      ],\n      "policyName": "SOD Policy",\n      "policyType": "SOD",\n      "description": "Security design should not be combined with administrative permissions.",\n      "constraintName": " IT SOD-117",\n      "leftBundles": [\n        "Security Architect - IT"\n      ],\n      "rightBundles": [\n        "Unix Administrator - IT"\n      ]\n    }\n  ],\n  "schemas": [\n    "urn:ietf:params:scim:schemas:sailpoint:1.0:CheckedPolicyViolation"\n  ],\n  "policies": [\n    "SOD Policy",\n    "Entitlement Policy",\n    "RandomPolicyNotExisting"\n  ],\n  "plan": {\n    "value": {\n      "accounts": [\n        {\n          "op": "Modify",\n          "instance": "null",\n          "application": "Active_Directory",\n          "attributes": [\n            {\n              "op": "Add",\n              "name": "groupmbr",\n              "value": "UnixAdministration"\n            }\n          ]\n        }\n      ]\n    },\n    "type": "application/sailpoint.object.ProvisioningPlan+json"\n  }\n}',language:"json",mdxType:"ResponseSamples"}))))))))))}g.isMDXComponent=!0}}]);